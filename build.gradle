/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/java_library_plugin.html
 */

version '0.0.1-SNAPSHOT'
group 'com.gl365.dao'

buildscript {
	ext {
		springBootVersion = '1.4.5.RELEASE'
		sonarqubeVersion = '2.2.1'
	}
	repositories {
		//maven { url 'http://glnexus.ftiao.cn/repository/maven-public' } 
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarqubeVersion}") 
	}
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven'
apply plugin: 'maven-publish'
//apply plugin: 'org.sonarqube'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
   // maven { url 'http://glnexus.ftiao.cn/repository/maven-public' }
    jcenter()
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compile 'mysql:mysql-connector-java:6.0.6'
    compile 'com.alibaba:druid:1.0.27'
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.2.0'
    compile 'org.mybatis:mybatis-typehandlers-jsr310:1.0.2'

 	compile 'tk.mybatis:mapper-spring-boot-starter:1.1.1'
 	compile 'com.github.pagehelper:pagehelper-spring-boot-starter:1.1.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

dependencyManagement {
  imports {
    mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR6'
  }
}

task clientJar(type:Jar, dependsOn: ['classes']) {
	from('build/classes/main') {
		include('com/gl365/**')
	}
	from('build/resources/main') {
		include('META-INF/**')
	}
} 

publishing {
    repositories {
        maven {
            url 'http://glnexus.ftiao.cn/repository/maven-snapshots/'
            credentials {
            	username 'gldev' 
            	password '365gl'
            }
        }
    }

    publications {
        client(MavenPublication) {
            artifact clientJar
            groupId "$project.group"
            artifactId "$project.name"
            version "$project.version"
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each { ModuleDependency dp ->
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dp.group)
                    dependencyNode.appendNode('artifactId', dp.name)
                    dependencyNode.appendNode('version', dp.version)
                    if (dp.excludeRules.size() > 0) {
                        def exclusions = dependencyNode.appendNode('exclusions')
                        dp.excludeRules.each { ExcludeRule ex ->
                            def exclusion = exclusions.appendNode('exclusion')
                            exclusion.appendNode('groupId', ex.group)
                            exclusion.appendNode('artifactId', ex.module)
                        }
            		}
     			}
			}
         }
     }
}